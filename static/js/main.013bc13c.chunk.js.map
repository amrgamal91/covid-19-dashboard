{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","App.js","index.js","App.module.css","components/Chart/Chart.module.css","images/corona.png"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","classNames","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","separator","duration","Date","toDateString","URL","fetchData","country","a","modifiedUrl","axios","get","console","log","fetchDailyData","dailyURL","modifiedData","map","total","date","reportDate","fetchCountries","countryUrl","countries","name","Chart","useState","dailyData","setDailyData","useEffect","initialDailyData","fetchAPI","barChart","labels","datasets","label","backgroundColor","options","legend","display","title","text","lineChart","length","borderColor","fill","CountyPicker","handleCountryChange","fetchedCountries","setFetchedCountries","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","key","App","state","fetchedData","setState","this","image","src","corona","alt","CountryPicker","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.013bc13c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__3bjn6\",\"card\":\"Cards_card__eGUfZ\",\"infected\":\"Cards_infected__-adYp\",\"recovered\":\"Cards_recovered__1aizD\",\"deaths\":\"Cards_deaths__Qdjzq\"};","import React from \"react\";\nimport { Card, CardContent, Typography, Grid } from \"@material-ui/core\";\nimport CountUp from \"react-countup\";\nimport classNames from \"classnames\";\nimport styles from \"./Cards.module.css\";\n\nconst Cards = ({ data: { confirmed, recovered, deaths, lastUpdate } }) => {\n  if (!confirmed) {\n    return \"Loading...\";\n  }\n  return (\n    <div className={styles.container}>\n      <Grid container spacing={3} justify=\"center\">\n        <Grid\n          item\n          component={Card}\n          xs={12}\n          md={3}\n          className={classNames(styles.card, styles.infected)}\n        >\n          <CardContent>\n            <Typography color=\"textSecondary\" gutterBottom>\n              Infected\n            </Typography>\n            <Typography variant=\"h5\">\n              <CountUp\n                start={0}\n                end={confirmed.value}\n                separator=\",\"\n                duration={2}\n              />\n            </Typography>\n            <Typography color=\"textSecondary\">\n              {new Date(lastUpdate).toDateString()}\n            </Typography>\n            <Typography variant=\"body2\">\n              Number of Active Cases of Covid-19\n            </Typography>\n          </CardContent>\n        </Grid>\n        <Grid\n          item\n          component={Card}\n          xs={12}\n          md={3}\n          className={classNames(styles.card, styles.recovered)}\n        >\n          <CardContent>\n            <Typography color=\"textSecondary\" gutterBottom>\n              Recovered\n            </Typography>\n            <Typography variant=\"h5\">\n              {\" \"}\n              <CountUp\n                start={0}\n                end={recovered.value}\n                separator=\",\"\n                duration={2}\n              />\n            </Typography>\n            <Typography color=\"textSecondary\">\n              {\" \"}\n              {new Date(lastUpdate).toDateString()}\n            </Typography>\n            <Typography variant=\"body2\">\n              Number of recoveries from Covid-19\n            </Typography>\n          </CardContent>\n        </Grid>\n        <Grid\n          item\n          component={Card}\n          xs={12}\n          md={3}\n          className={classNames(styles.card, styles.deaths)}\n        >\n          <CardContent>\n            <Typography color=\"textSecondary\" gutterBottom>\n              Deaths\n            </Typography>\n            <Typography variant=\"h5\">\n              {\" \"}\n              <CountUp\n                start={0}\n                end={deaths.value}\n                separator=\",\"\n                duration={2}\n              />\n            </Typography>\n            <Typography color=\"textSecondary\">\n              {\" \"}\n              {new Date(lastUpdate).toDateString()}\n            </Typography>\n            <Typography variant=\"body2\">\n              Number of deaths caused by Covid-19\n            </Typography>\n          </CardContent>\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default Cards;\n","import axios from \"axios\";\n\nconst URL = \"https://covid19.mathdro.id/api\";\n\nexport const fetchData = async (country) => {\n  try {\n    let modifiedUrl=URL;\n    if(country){\n      modifiedUrl=`${URL}/countries/${country}`;\n    }\n    const {\n      data: { confirmed, recovered, deaths, lastUpdate }\n    } = await axios.get(modifiedUrl);\n\n    return { confirmed, recovered, deaths, lastUpdate };\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nexport const fetchDailyData = async () => {\n  try {\n    const dailyURL = `${URL}/daily`;\n    const { data } = await axios.get(dailyURL);\n\n    // console.log(`data : ${dailyData}`);\n    const modifiedData = data.map(item => ({\n      confirmed: item.confirmed.total,\n      deaths: item.deaths.total,\n      date: item.reportDate\n    }));\n\n    return modifiedData;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const fetchCountries = async () => {\n  try {\n    const countryUrl = `${URL}/countries`;\n    const {\n      data: { countries }\n    } = await axios.get(countryUrl);\n    // console.log(\"fetchedCountries=\" + countries);\n    return countries.map(country => country.name);\n  } catch (error) {\n    console.log(error);\n  }\n};\n","import React, { useState, useEffect } from \"react\";\nimport { fetchDailyData } from \"../../api\";\nimport { Line, Bar } from \"react-chartjs-2\";\nimport styles from \"./Chart.module.css\";\n\nexport const Chart = ({ data: { confirmed, recovered, deaths }, country }) => {\n  const [dailyData, setDailyData] = useState([]);\n\n  useEffect(() => {\n    const fetchAPI = async () => {\n      const initialDailyData = await fetchDailyData();\n\n      setDailyData(initialDailyData);\n    };\n\n    fetchAPI();\n  });\n\n  const barChart = confirmed ? (\n    <Bar\n      data={{\n        labels: [\"Infected\", \"Recovered\", \"Deaths\"],\n        datasets: [\n          {\n            label: \"People\",\n            backgroundColor: [\n              \"rgba(0, 0, 255, 0.5)\",\n              \"rgba(0, 255, 0, 0.5)\",\n              \"rgba(255, 0, 0, 0.5)\"\n            ],\n            data: [confirmed.value, recovered.value, deaths.value]\n          }\n        ]\n      }}\n      options={{\n        legend: { display: false },\n        title: { display: true, text: `Current state in ${country}` }\n      }}\n    />\n  ) : null;\n\n  const lineChart =\n    dailyData && dailyData.length ? (\n      <Line\n        data={{\n          labels: dailyData.map(({ date }) => date),\n          datasets: [\n            {\n              data: dailyData.map(data => data.confirmed),\n              label: \"Infected\",\n              borderColor: \"#3333ff\",\n              fill: true\n            },\n            {\n              data: dailyData.map(data => data.confirmed),\n              label: \"Deaths\",\n              borderColor: \"red\",\n              backgroundColor: \"rgba(255, 0, 0, 0.5)\",\n              fill: true\n            }\n          ]\n        }}\n      />\n    ) : null;\n\n  return (\n    <div className={styles.container}> {country ? barChart : lineChart}</div>\n  );\n};\n\nexport default Chart;\n","import React, { useState, useEffect } from \"react\";\nimport { NativeSelect, FormControl } from \"@material-ui/core\";\nimport styles from \"./CountryPicker.module.css\";\nimport { fetchCountries } from \"../../api\";\n\nexport const CountyPicker = ({handleCountryChange}) => {\n  const [fetchedCountries, setFetchedCountries] = useState([]);\n\n  useEffect(() => {\n    const fetchAPI = async () => {\n      setFetchedCountries(await fetchCountries());\n    };\n    fetchAPI();\n  }, [setFetchedCountries]);\n\n  return (\n    <FormControl className={styles.formControl}>\n      <NativeSelect defaultValue='' onChange={(e)=>{handleCountryChange(e.target.value)}}>\n        <option value=\"\">Global</option>\n        {fetchedCountries.map((country, i) => (\n          <option key={i} value={country} >\n            {country}\n          </option>\n        ))}\n      </NativeSelect>\n    </FormControl>\n  );\n};\n\nexport default CountyPicker;\n","import React, { Component } from \"react\";\nimport { Cards, Chart, CountryPicker } from \"./components\";\nimport styles from \"./App.module.css\";\nimport { fetchData } from \"./api\";\nimport corona from './images/corona.png';\nexport default class App extends Component {\n  state = {\n    data: {},\n    country: \"\"\n  };\n\n  async componentDidMount() {\n    const fetchedData = await fetchData();\n    this.setState({ data: fetchedData });\n  }\n\n  handleCountryChange = async country => {\n    const fetchedData = await fetchData(country);\n    this.setState({ data: fetchedData, country: country });\n    // console.log(country);\n  };\n\n  render() {\n    const { data ,country} = this.state;\n    return (\n      <div className={styles.container}>\n         <img className={styles.image} src={corona} alt=\"COVID-19\" />\n        <Cards data={data} />\n        <CountryPicker handleCountryChange={this.handleCountryChange} />\n        <Chart data={data} country={country }/>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1MQN3\",\"image\":\"App_image__3byI1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__1PIOn\"};","module.exports = __webpack_public_path__ + \"static/media/corona.d7265326.png\";"],"sourceRoot":""}